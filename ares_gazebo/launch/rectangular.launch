<launch>

    <!-- 设置launch文件的参数 -->
    <arg name="world_name" value="$(find ares_gazebo)/worlds/empty.world"/>
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>

    <!-- 运行gazebo仿真环境 -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world_name)" />
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>

	<node name="rectangular"  pkg="ares_teleop" type="rectangular.py"  output="screen" />

    <!-- 加载机器人模型描述参数 -->
	<!-- begin robot1 -->
	<group ns="ares1">
		<!--模型车的起点放置位置-->
		<arg name="x_pos" default="0"/>
		<arg name="y_pos" default="-1"/>
		<arg name="z_pos" default="0"/>
    	<param name="robot_description" command="$(find xacro)/xacro --inorder '$(find ares_description)/urdf/ares_laser.xacro' bodyframe:=ares1 ns:=ares1" /> 

    	<!-- 运行joint_state_publisher节点，发布机器人的关节状态  -->
    	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node> 

    	<!-- 运行robot_state_publisher节点，发布tf  -->
   		<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"  output="screen" >
        <param name="publish_frequency" type="double" value="50.0" />
		</node>
	
    	<!-- 在gazebo中加载机器人模型-->
    	<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          	args="-urdf -model ares1 -param robot_description -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos)"/> 
   		
	</group>
	
	<!-- begin robot2 -->
	<group ns="ares2">
		<!--模型车的起点放置位置-->
		<arg name="x_pos" default="0"/>
		<arg name="y_pos" default="1"/>
		<arg name="z_pos" default="0"/>
    	<param name="robot_description" command="$(find xacro)/xacro --inorder '$(find ares_description)/urdf/ares_laser.xacro' bodyframe:=ares2 ns:=ares2" /> 

    	<!-- 运行joint_state_publisher节点，发布机器人的关节状态  -->
    	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node> 

    	<!-- 运行robot_state_publisher节点，发布tf  -->
   		<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"  output="screen" >
        <param name="publish_frequency" type="double" value="50.0" />
		</node>

    	<!-- 在gazebo中加载机器人模型-->
    	<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          	args="-urdf -model ares2 -param robot_description -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos)"/> 
	</group>

	<!-- begin robot3 -->
	<group ns="ares3">
		<!--模型车的起点放置位置-->
		<arg name="x_pos" default="1"/>
		<arg name="y_pos" default="0"/>
		<arg name="z_pos" default="0"/>
    	<param name="robot_description" command="$(find xacro)/xacro --inorder '$(find ares_description)/urdf/ares_laser.xacro' bodyframe:=ares3 ns:=ares3" /> 

    	<!-- 运行joint_state_publisher节点，发布机器人的关节状态  -->
    	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node> 

    	<!-- 运行robot_state_publisher节点，发布tf  -->
   		<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"  output="screen" >
        <param name="publish_frequency" type="double" value="50.0" />
		</node>

    	<!-- 在gazebo中加载机器人模型-->
    	<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          	args="-urdf -model ares3 -param robot_description -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos)"/> 
	</group>
	
	<!-- begin robot4 -->
	<group ns="ares4">
		<!--模型车的起点放置位置-->
		<arg name="x_pos" default="-1"/>
		<arg name="y_pos" default="0"/>
		<arg name="z_pos" default="0"/>
    	<param name="robot_description" command="$(find xacro)/xacro --inorder '$(find ares_description)/urdf/ares_laser.xacro' bodyframe:=ares4 ns:=ares4" /> 

    	<!-- 运行joint_state_publisher节点，发布机器人的关节状态  -->
    	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node> 

    	<!-- 运行robot_state_publisher节点，发布tf  -->
   		<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"  output="screen" >
        <param name="publish_frequency" type="double" value="50.0" />
		</node>

    	<!-- 在gazebo中加载机器人模型-->
    	<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          	args="-urdf -model ares4 -param robot_description -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos)"/> 
	</group>

</launch>
